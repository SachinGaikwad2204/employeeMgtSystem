package com.employee.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.employee.model.Employee;
import com.employee.service.EmployeeService;
import com.google.gson.Gson;

@RestController
@RequestMapping("/api/employees")
@CrossOrigin(origins = "http://localhost:3001/")
public class EmployeeController {

    @Autowired
    private EmployeeService employeeService;

    @GetMapping
    public ResponseEntity<List<Employee>> getAllEmployees() {
        return ResponseEntity.ok(employeeService.getAllEmployees());
    }

    @GetMapping("/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
        return ResponseEntity.ok(employeeService.getEmployeeById(id));
    }

    @PostMapping(consumes = "multipart/form-data")
    public ResponseEntity<Employee> createEmployee(
            @RequestParam("employee") String employeeJson,
            @RequestParam("profilePhoto") MultipartFile profilePhoto,
            @RequestParam("resume") MultipartFile resume) {
        Employee emp = new Gson().fromJson(employeeJson, Employee.class);
        return ResponseEntity.ok(employeeService.createEmployeeWithFiles(emp, profilePhoto, resume));
    }

    @PutMapping(value = "/{id}", consumes = "multipart/form-data")
    public ResponseEntity<Employee> updateEmployee(
            @PathVariable Long id,
            @RequestParam("employee") String employeeJson,
            @RequestParam("profilePhoto") MultipartFile profilePhoto,
            @RequestParam("resume") MultipartFile resume) {
        Employee emp = new Gson().fromJson(employeeJson, Employee.class);
        return ResponseEntity.ok(employeeService.updateEmployeeWithFiles(id, emp, profilePhoto, resume));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteEmployee(@PathVariable Long id) {
        employeeService.deleteEmployee(id);
        return ResponseEntity.ok("Deleted successfully");
    }
}
