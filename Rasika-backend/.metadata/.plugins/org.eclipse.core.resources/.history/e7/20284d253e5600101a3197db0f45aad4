package com.employee.controller;

import com.employee.model.Employee;
import com.employee.service.EmployeeService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;

@RestController
@RequestMapping("/api/employees")
@CrossOrigin(origins = "http://localhost:3001/")
public class EmployeeController {

    @Autowired
    private EmployeeService employeeService;

    // Get all employees
    @GetMapping
    public ResponseEntity<List<Employee>> getAllEmployees() {
        return ResponseEntity.ok(employeeService.getAllEmployees());
    }

    // Get employee by ID
    @GetMapping("/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
        return ResponseEntity.ok(employeeService.getEmployeeById(id));
    }

    // Add new employee with file upload
    @PostMapping(consumes = "multipart/form-data")
    public ResponseEntity<Employee> createEmployee(
        @RequestParam("profilePhoto") MultipartFile profilePhoto,
        @RequestParam("resume") MultipartFile resume,
        @RequestParam("fullName") String fullName,
        @RequestParam("email") String email,
        @RequestParam("phone") String phone,
        @RequestParam("gender") String gender,
        @RequestParam("dateOfBirth") String dateOfBirth,
        @RequestParam("department") String department,
        @RequestParam("jobTitle") String jobTitle,
        @RequestParam("dateOfJoining") String dateOfJoining,
        @RequestParam("salary") String salary,
        @RequestParam("employmentType") String employmentType,
        @RequestParam("addressLine1") String addressLine1,
        @RequestParam("addressLine2") String addressLine2,
        @RequestParam("city") String city,
        @RequestParam("state") String state,
        @RequestParam("zipCode") String zipCode,
        @RequestParam("panNumber") String panNumber,
        @RequestParam("aadhaarNumber") String aadhaarNumber
    ) {
        Employee employee = new Employee();
        employee.setFullName(fullName);
        employee.setEmail(email);
        employee.setPhone(phone);
        employee.setGender(gender);
        employee.setDateOfBirth(dateOfBirth);
        employee.setDepartment(department);
        employee.setJobTitle(jobTitle);
        employee.setDateOfJoining(dateOfJoining);
        employee.setSalary(salary);
        employee.setEmploymentType(employmentType);
        employee.setAddressLine1(addressLine1);
        employee.setAddressLine2(addressLine2);
        employee.setCity(city);
        employee.setState(state);
        employee.setZipCode(zipCode);
        employee.setPanNumber(panNumber);
        employee.setAadhaarNumber(aadhaarNumber);

        // Save file contents or file paths as needed in the service layer
        return ResponseEntity.ok(employeeService.createEmployeeWithFiles(employee, profilePhoto, resume));
    }

    // Update employee with file upload (optional files)
    @PutMapping(value = "/{id}", consumes = "multipart/form-data")
    public ResponseEntity<Employee> updateEmployee(
        @PathVariable Long id,
        @RequestParam("profilePhoto") MultipartFile profilePhoto,
        @RequestParam("resume") MultipartFile resume,
        @RequestParam("fullName") String fullName,
        @RequestParam("email") String email,
        @RequestParam("phone") String phone,
        @RequestParam("gender") String gender,
        @RequestParam("dateOfBirth") String dateOfBirth,
        @RequestParam("department") String department,
        @RequestParam("jobTitle") String jobTitle,
        @RequestParam("dateOfJoining") String dateOfJoining,
        @RequestParam("salary") String salary,
        @RequestParam("employmentType") String employmentType,
        @RequestParam("addressLine1") String addressLine1,
        @RequestParam("addressLine2") String addressLine2,
        @RequestParam("city") String city,
        @RequestParam("state") String state,
        @RequestParam("zipCode") String zipCode,
        @RequestParam("panNumber") String panNumber,
        @RequestParam("aadhaarNumber") String aadhaarNumber
    ) {
        Employee employee = new Employee();
        employee.setFullName(fullName);
        employee.setEmail(email);
        employee.setPhone(phone);
        employee.setGender(gender);
        employee.setDateOfBirth(dateOfBirth);
        employee.setDepartment(department);
        employee.setJobTitle(jobTitle);
        employee.setDateOfJoining(dateOfJoining);
        employee.setSalary(salary);
        employee.setEmploymentType(employmentType);
        employee.setAddressLine1(addressLine1);
        employee.setAddressLine2(addressLine2);
        employee.setCity(city);
        employee.setState(state);
        employee.setZipCode(zipCode);
        employee.setPanNumber(panNumber);
        employee.setAadhaarNumber(aadhaarNumber);

        return ResponseEntity.ok(employeeService.updateEmployeeWithFiles(id, employee, profilePhoto, resume));
    }

    // Delete employee
    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteEmployee(@PathVariable Long id) {
        employeeService.deleteEmployee(id);
        return ResponseEntity.ok("Employee deleted successfully!");
    }
}
